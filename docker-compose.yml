version: '3'

services:
  mysql-db:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_DATABASE: apiwork
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend

  spring-api:
    build:
      context: ./backend
    container_name: spring-api
    depends_on:
      - mysql-db
    environment:
      SPRING_DATASOURCE_URL: jdbc:mysql://mysql-db:3306/apiwork
      SPRING_DATASOURCE_USERNAME: root
      SPRING_DATASOURCE_PASSWORD: root
    ports:
      - "8080:8080"
    networks:
      - backend

  react-app-1:
    build:
      context: ./frontend
    container_name: react-app-1
    restart: always
    networks:
      - frontend

  react-app-2:
    build:
      context: ./frontend
    container_name: react-app-2
    restart: always
    networks:
      - frontend

  react-app-3:
    build:
      context: ./frontend
    container_name: react-app-3
    restart: always
    networks:
      - frontend

  nginx:
    image: nginx:alpine
    container_name: nginx-loadbalancer
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - react-app-1
      - react-app-2
      - react-app-3
    restart: always
    networks:
      - frontend

volumes:
  mysql_data:

networks:
  backend:
  frontend:
